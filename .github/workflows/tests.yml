name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - run: pip install mypy pydantic
    - run: mypy runnel

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - run: poetry install -E fast
      - run: poetry run coverage run --source=runnel -m pytest
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          RUNNEL_LOG_LEVEL: debug
      - run: poetry run coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true

  coveralls:
    needs: tests
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip install coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
